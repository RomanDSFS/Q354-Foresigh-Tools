// src/components/tools/FutureWheel.tsx

'use client';

import { useState } from 'react';

type Consequence = {
  id: string;
  text: string;
};

export default function FutureWheel() {
  const [center, setCenter] = useState<string>('–ù–æ–≤–æ–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ —Å–æ–±—ã—Ç–∏–µ');
  const [level1, setLevel1] = useState<Consequence[]>([
    { id: '1', text: '–ü—Ä—è–º–æ–µ —Å–ª–µ–¥—Å—Ç–≤–∏–µ 1' },
    { id: '2', text: '–ü—Ä—è–º–æ–µ —Å–ª–µ–¥—Å—Ç–≤–∏–µ 2' },
    { id: '3', text: '–ü—Ä—è–º–æ–µ —Å–ª–µ–¥—Å—Ç–≤–∏–µ 3' },
    { id: '4', text: '–ü—Ä—è–º–æ–µ —Å–ª–µ–¥—Å—Ç–≤–∏–µ 4' },
  ]);
  const [level2, setLevel2] = useState<Record<string, Consequence[]>>({
    '1': [{ id: '1-1', text: '–í—Ç–æ—Ä–∏—á–Ω–æ–µ —Å–ª–µ–¥—Å—Ç–≤–∏–µ' }],
    '2': [{ id: '2-1', text: '–í—Ç–æ—Ä–∏—á–Ω–æ–µ —Å–ª–µ–¥—Å—Ç–≤–∏–µ' }],
    '3': [{ id: '3-1', text: '–í—Ç–æ—Ä–∏—á–Ω–æ–µ —Å–ª–µ–¥—Å—Ç–≤–∏–µ' }],
    '4': [{ id: '4-1', text: '–í—Ç–æ—Ä–∏—á–Ω–æ–µ —Å–ª–µ–¥—Å—Ç–≤–∏–µ' }],
  });

  const updateCenter = (e: React.ChangeEvent<HTMLInputElement>) => {
    setCenter(e.target.value);
  };

  const updateLevel1 = (id: string, text: string) => {
    setLevel1(prev => prev.map(item => (item.id === id ? { ...item, text } : item)));
  };

  const addLevel2 = (parentId: string) => {
    setLevel2(prev => ({
      ...prev,
      [parentId]: [...(prev[parentId] || []), { id: `${parentId}-${Date.now()}`, text: '–ù–æ–≤–æ–µ —Å–ª–µ–¥—Å—Ç–≤–∏–µ' }],
    }));
  };

  const updateLevel2 = (parentId: string, childId: string, text: string) => {
    setLevel2(prev => ({
      ...prev,
      [parentId]: prev[parentId].map(child => (child.id === childId ? { ...child, text } : child)),
    }));
  };

  // –ü—Ä–æ—Å—Ç–∞—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –≤ –≤–∏–¥–µ —Ç–µ–∫—Å—Ç–∞ (–º–æ–∂–Ω–æ –ø–æ–∑–∂–µ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ SVG)
  return (
    <div className="bg-white p-6 rounded-xl shadow max-w-3xl mx-auto">
      <h3 className="text-lg font-semibold text-gray-800 mb-4">–ö–æ–ª–µ—Å–æ –±—É–¥—É—â–µ–≥–æ</h3>

      {/* –¶–µ–Ω—Ç—Ä */}
      <div className="mb-6">
        <label className="block text-sm font-medium text-gray-700 mb-1">–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ</label>
        <input
          type="text"
          value={center}
          onChange={updateCenter}
          className="w-full p-2 border text-gray-700 border-gray-300 rounded-md"
        />
      </div>

      {/* –£—Ä–æ–≤–µ–Ω—å 1 */}
      <div className="mb-6">
        <h4 className="font-medium text-gray-700 mb-2">–ü—Ä—è–º—ã–µ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è (1-–π —É—Ä–æ–≤–µ–Ω—å)</h4>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
          {level1.map((item) => (
            <div key={item.id} className="border-l-4 border-blue-500 pl-3">
              <input
                type="text"
                value={item.text}
                onChange={(e) => updateLevel1(item.id, e.target.value)}
                className="w-full p-1 text-sm text-gray-700 border-b border-gray-700 focus:outline-none"
              />
              {/* –£—Ä–æ–≤–µ–Ω—å 2 –¥–ª—è —ç—Ç–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ */}
              <div className="mt-2 ml-2">
                {level2[item.id]?.map((child) => (
                  <div key={child.id} className="mt-1">
                    <input
                      type="text"
                      value={child.text}
                      onChange={(e) => updateLevel2(item.id, child.id, e.target.value)}
                      className="w-full p-1 text-xs text-gray-700 border-b border-gray-700 focus:outline-none bg-gray-50"
                      placeholder="–í—Ç–æ—Ä–∏—á–Ω–æ–µ —Å–ª–µ–¥—Å—Ç–≤–∏–µ..."
                    />
                  </div>
                ))}
                <button
                  type="button"
                  onClick={() => addLevel2(item.id)}
                  className="mt-1 text-xs text-blue-600 hover:underline"
                >
                  + –î–æ–±–∞–≤–∏—Ç—å –≤—Ç–æ—Ä–∏—á–Ω–æ–µ —Å–ª–µ–¥—Å—Ç–≤–∏–µ
                </button>
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* –°–æ–≤–µ—Ç */}
      <div className="text-sm text-gray-600 mt-4 p-3 bg-blue-50 rounded">
        üí° –°–æ–≤–µ—Ç: –Ω–∞—á–Ω–∏—Ç–µ —Å —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Ç—Ä–µ–Ω–¥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, ¬´—Ä–æ—Å—Ç –ò–ò¬ª), –∑–∞—Ç–µ–º –ø–æ–¥—É–º–∞–π—Ç–µ: ¬´–ß—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é?¬ª, –∞ –ø–æ—Ç–æ–º ‚Äî ¬´–ö–∞–∫ –æ–±—â–µ—Å—Ç–≤–æ/–±–∏–∑–Ω–µ—Å –æ—Ç—Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ —ç—Ç–æ?¬ª
      </div>
    </div>
  );
}