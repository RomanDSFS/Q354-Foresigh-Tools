// src/components/tools/HorizontalScanning.tsx

'use client';

import { useState, useEffect } from 'react';

type Signal = {
  id: string;
  text: string;
};

type PESTEL = {
  political: Signal[];
  economic: Signal[];
  social: Signal[];
  technological: Signal[];
  environmental: Signal[];
  legal: Signal[];
};

const PESTEL_CATEGORIES: { key: keyof PESTEL; label: string; color: string; examples: string[] }[] = [
  { key: 'political', label: '–ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ', color: 'bg-red-100 border-red-300', examples: ['–°–º–µ–Ω–∞ —Ä–µ–≥—É–ª—è—Ç–æ—Ä–∞', '–ù–æ–≤—ã–µ —Å–∞–Ω–∫—Ü–∏–∏', '–ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞–ª–æ–≥–æ–≤–æ–π –ø–æ–ª–∏—Ç–∏–∫–∏'] },
  { key: 'economic', label: '–≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ', color: 'bg-yellow-100 border-yellow-300', examples: ['–†–æ—Å—Ç –∏–Ω—Ñ–ª—è—Ü–∏–∏', '–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç', '–†–µ—Ü–µ—Å—Å–∏—è'] },
  { key: 'social', label: '–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ', color: 'bg-green-100 border-green-300', examples: ['–°—Ç–∞—Ä–µ–Ω–∏–µ –Ω–∞—Å–µ–ª–µ–Ω–∏—è', '–†–æ—Å—Ç —É–¥–∞–ª—ë–Ω–∫–∏', '–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω–Ω–æ—Å—Ç–µ–π'] },
  { key: 'technological', label: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ', color: 'bg-blue-100 border-blue-300', examples: ['–ü—Ä–æ—Ä—ã–≤ –≤ –ò–ò', '–ö–≤–∞–Ω—Ç–æ–≤—ã–µ –∫–æ–º–ø—å—é—Ç–µ—Ä—ã', '–ù–æ–≤—ã–µ –±–∏–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏'] },
  { key: 'environmental', label: '–≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ', color: 'bg-emerald-100 border-emerald-300', examples: ['–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–ª–∏–º–∞—Ç–∞', '–î–µ—Ñ–∏—Ü–∏—Ç –≤–æ–¥—ã', '–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –í–ò–≠'] },
  { key: 'legal', label: '–ü—Ä–∞–≤–æ–≤—ã–µ', color: 'bg-purple-100 border-purple-300', examples: ['–ù–æ–≤—ã–µ –∑–∞–∫–æ–Ω—ã –æ –¥–∞–Ω–Ω—ã—Ö', '–ê–Ω—Ç–∏–º–æ–Ω–æ–ø–æ–ª—å–Ω—ã–µ —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è', '–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç—Ä—É–¥–æ–≤–æ–≥–æ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞'] },
];

const STORAGE_KEY = 'horizontal-scanning-data';

export default function HorizontalScanning() {
  const [data, setData] = useState<PESTEL>(() => {
    if (typeof window !== 'undefined') {
      const saved = localStorage.getItem(STORAGE_KEY);
      if (saved) return JSON.parse(saved);
    }
    return {
      political: [{ id: 'p1', text: '–ù–æ–≤—ã–π –∑–∞–∫–æ–Ω –æ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö –∞–∫—Ç–∏–≤–∞—Ö' }],
      economic: [{ id: 'e1', text: '–†–æ—Å—Ç —Å—Ç–∞–≤–æ–∫ –¶–ë' }],
      social: [{ id: 's1', text: '–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∂–∏–∑–Ω–∏' }],
      technological: [{ id: 't1', text: '–ú–∞—Å—Å–æ–≤–æ–µ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ –ò–ò –≤ –º–µ–¥–∏—Ü–∏–Ω—É' }],
      environmental: [{ id: 'env1', text: '–£–∂–µ—Å—Ç–æ—á–µ–Ω–∏–µ –Ω–æ—Ä–º –≤—ã–±—Ä–æ—Å–æ–≤ CO2' }],
      legal: [{ id: 'l1', text: 'GDPR-–ø–æ–¥–æ–±–Ω—ã–µ –∑–∞–∫–æ–Ω—ã –≤ –Ω–æ–≤—ã—Ö —Å—Ç—Ä–∞–Ω–∞—Ö' }],
    };
  });

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
  useEffect(() => {
    localStorage.setItem(STORAGE_KEY, JSON.stringify(data));
  }, [data]);

  const addSignal = (category: keyof PESTEL) => {
    const newSignal: Signal = { id: `${category}-${Date.now()}`, text: '–ù–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª' };
    setData(prev => ({
      ...prev,
      [category]: [...prev[category], newSignal],
    }));
  };

  const updateSignal = (category: keyof PESTEL, id: string, text: string) => {
    setData(prev => ({
      ...prev,
      [category]: prev[category].map(item => item.id === id ? { ...item, text } : item),
    }));
  };

  const deleteSignal = (category: keyof PESTEL, id: string) => {
    setData(prev => ({
      ...prev,
      [category]: prev[category].filter(item => item.id !== id),
    }));
  };

  return (
    <div className="space-y-6 max-w-4xl mx-auto">
      <div className="text-center mb-6">
        <h3 className="text-lg font-semibold text-gray-800">–ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ (PESTEL)</h3>
        <p className="text-sm text-gray-600 mt-1">
          –î–æ–±–∞–≤—å—Ç–µ —Å–∏–≥–Ω–∞–ª—ã –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –∫–∞–∂–¥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é. –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≤—ã—è–≤–∏—Ç—å —Ç—Ä–µ–Ω–¥—ã –∏ —Ä–∏—Å–∫–∏.
        </p>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
        {PESTEL_CATEGORIES.map(({ key, label, color, examples }) => (
          <div key={key} className={`border rounded-lg p-4 ${color}`}>
            <div className="flex justify-between items-start mb-2">
              <h4 className="font-medium text-gray-800">{label}</h4>
              <button
                type="button"
                onClick={() => addSignal(key)}
                className="text-xs text-blue-600 hover:underline"
              >
                + –î–æ–±–∞–≤–∏—Ç—å
              </button>
            </div>

            <div className="space-y-2 mb-3">
              {data[key].map((signal) => (
                <div key={signal.id} className="flex items-start">
                  <input
                    type="text"
                    value={signal.text}
                    onChange={(e) => updateSignal(key, signal.id, e.target.value)}
                    className="flex-1 text-sm text-gray-800 p-1 border-b border-gray-500 focus:outline-none bg-transparent"
                  />
                  <button
                    type="button"
                    onClick={() => deleteSignal(key, signal.id)}
                    className="ml-2 text-xs text-red-500 hover:text-red-700"
                  >
                    ‚úï
                  </button>
                </div>
              ))}
            </div>

            <div className="text-xs text-gray-700 mt-2">
              <p className="font-bold">–ü—Ä–∏–º–µ—Ä—ã:</p>
              <ul className="list-disc list-inside space-y-1">
                {examples.slice(0, 2).map((ex, i) => (
                  <li key={i}>{ex}</li>
                ))}
              </ul>
            </div>
          </div>
        ))}
      </div>

      <div className="text-sm text-gray-600 bg-blue-50 p-4 rounded-lg">
        üí° <strong>–°–æ–≤–µ—Ç:</strong> –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –Ω–∞ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–π –æ—Å–Ω–æ–≤–µ (–µ–∂–µ–∫–≤–∞—Ä—Ç–∞–ª—å–Ω–æ). –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ ‚Äî –Ω–µ —Ä–∞–∑–æ–≤–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ, –∞ –ø—Ä–æ—Ü–µ—Å—Å!
      </div>
    </div>
  );
}